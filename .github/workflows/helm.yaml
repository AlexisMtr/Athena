name: Helm Chart

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize]
    paths:
    - 'deploy/helm/**'
    branches:
    - main
  push:
    paths:
    - 'deploy/helm/**'
    branches:
    - main

jobs:
  semantic_version:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Compute next version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT_GITHUB }}
        fetch-depth: 0

    - name: Retrieve branch name
      id: branch_name
      env:
        PR_HEAD_LABEL: ${{ github.event.pull_request.head.label }}
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          echo "::set-output name=branch::${PR_HEAD_LABEL#*:}"
        else
          echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        fi

    - uses: paulhatch/semantic-version@v3
      id: semver
      name: Compute SemVer
      with:
        branch: "${{ steps.branch_name.outputs.branch }}"
        tag_prefix: "helm-"
        major_pattern: "BREAKING CHANGES"
        minor_pattern: "feat"
        format: "${major}.${minor}.${patch}"
        change_path: 'deploy/helm/'

    - name: Comment PR
      if: ${{ steps.semver.outputs.changed && github.event_name == 'pull_request' }}
      uses: thollander/actions-comment-pull-request@master
      with:
        message: "### üë∑üèª‚Äç‚ôÇÔ∏è Next helm chart version will be **${{ steps.semver.outputs.version}}**\ndon't worry, Github Action will take care of all of this for you once this PR will be merged üßòüèª‚Äç‚ôÄÔ∏è"
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}

    - name: Update chart version, tag and push
      if: ${{ steps.semver.outputs.changed && github.event_name == 'push' }}
      run: |
        sed -i 's/version: .*/version: ${{ steps.semver.outputs.version}}/' ./deploy/helm/athena/Chart.yaml
        
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git config user.name "${{ github.actor }}"

        git add ./deploy/helm/athena/Chart.yaml
        git commit -m "chore(helm): bump Athena helm chart version to ${{ steps.semver.outputs.version }} [skip ci]"
        git tag helm-${{ steps.semver.outputs.version }} -a -m "Athena helm chart version ${{ steps.semver.outputs.version }}"

        git push --follow-tags
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}